problemasmTestForLoop:problem.asm.TestForLoop[a]
javautilArrayList:java.util.ArrayList[a]
javautilAbstractList:java.util.AbstractList[a]
javautilList:java.util.List[a]
javautilIterator:java.util.Iterator[a]
javalangStringBuilder:java.lang.StringBuilder[a]
javalangString:java.lang.String[a]
javalangAbstractStringBuilder:java.lang.AbstractStringBuilder[a]
javaioPrintStream:java.io.PrintStream[a]

problemasmTestForLoop:void=javautilArrayList.<init>()
javautilArrayList:void=javautilAbstractList.<init>()
javautilArrayList:boolean=javautilList.add(java.lang.Object)
javautilList:boolean=javautilList.add(java.lang.Object)
javautilList:java.util.Iterator=javautilList.iterator()
javautilList:java.lang.Object=javautilIterator.next()
javautilIterator:void=javalangStringBuilder.<init>(java.lang.String)
javalangStringBuilder:int=javalangString.length()
javalangStringBuilder:void=javalangAbstractStringBuilder.<init>(int)
javalangStringBuilder:java.lang.StringBuilder=javalangStringBuilder.append(java.lang.String)
javalangStringBuilder:java.lang.StringBuilder=javalangStringBuilder.append(java.lang.String)
javalangStringBuilder:java.lang.AbstractStringBuilder=javalangAbstractStringBuilder.append(java.lang.String)
javalangStringBuilder:java.lang.StringBuilder=javalangStringBuilder.append(java.lang.String)
javalangStringBuilder:java.lang.String=javalangStringBuilder.toString()
javalangStringBuilder:void=javalangString.<init>(char[], int, int)
javalangStringBuilder:void=javaioPrintStream.println(java.lang.String)
javaioPrintStream:void=javaioPrintStream.print(java.lang.String)
javaioPrintStream:void=javaioPrintStream.newLine()
javaioPrintStream:boolean=javautilIterator.hasNext()
